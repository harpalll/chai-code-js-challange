{"version":3,"sources":["function.js"],"names":["isOddOrEven","num","Error","res","console","log","concat","sqr","findMaxFromTwo","num1","num2","joinTwoStr","str1","str2","addTwoNumbers","searchInStr","str","searchText","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","err","e","f","product","arguments","length","undefined","greet","personName","personAge","callFunction","fn","numOfIterations","index","higherOrderFunc","fn1","fn2"],"mappings":"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","file":"function.js","sourceRoot":"../day5","sourcesContent":["// Day-5 Functions\n\n// function declaration\nfunction isOddOrEven(num) {\n    if (!num) throw new Error(\"Please Provide a number\")\n\n    const res = num % 2 === 0 ? \"Even\" : \"Odd\"\n    console.log(`${num} is ${res}`)\n}\n\nfunction sqr(num) {\n    if (!num) throw new Error(\"Please Provide a number\")\n\n    return num * num;\n    // return Math.pow(num, 2);   \n}\n// isOddOrEven(5)\n// console.log(sqr(2))\n\n// function Expression\nfunction findMaxFromTwo(num1,num2) {\n    if (!num1 || !num2) throw new Error(\"Please Provide a number\")\n\n    return num1 > num2 ? num1 : num2    \n}\n// console.log(findMaxFromTwo(4,25))\n\nfunction joinTwoStr(str1, str2) {\n    if (!str1 || !str2) throw new Error(\"Strings are required\");\n    if (typeof str1 !== 'string' || typeof str2 !== 'string') throw new Error(\"Please provide only strings\");\n    return str1 + str2;\n}\n\n// console.log(joinTwoStr(\"helloo\", 12))\n\n// Arrow Functions\nconst addTwoNumbers = (num1, num2) => {\n    if (!num1 || !num2) throw new Error(\"Please Provide a number\")\n    return num1+num2    \n}\n\n// console.log(addTwoNumbers(2,2))\nconst searchInStr = (str, searchText) => {\n    if (!str || !searchText) throw new Error(\"Please provide string and searchtext\")\n\n    for (const search of str) {\n        if (search === searchText) return true\n        return false\n    }\n}\n\n// console.log(searchInStr(\"hello\", \"x\"))\n\n// function parameters and default values\nconst product = (num1, num2 = 2) => {\n    if (!num1) throw new Error(\"Please Provide atleast one number\")\n        \n    return num1*num2\n}\n\n// console.log(product(2))\nconst greet = (personName, personAge = 18) => {\n    if (!personName) throw new Error(\"Please Provide your name\")\n\n    return `Hello ${personName} of Age ${personAge}`\n}\n// console.log(greet(\"test\"))\n\n// Higher Order Functions\nconst callFunction = (fn, numOfIterations) => {\n    for (let index = 0; index < numOfIterations; index++) {\n        fn()\n    }\n}\n\n// callFunction(() => console.log(\"hello\"), 3)\n\nconst higherOrderFunc = (fn1, fn2, value) => {\n    const resOfFn1 = fn1(value)\n    fn2(resOfFn1)\n}\n\n// higherOrderFunc((num) => num*2 , (num) => console.log(num+2), 5)"]}